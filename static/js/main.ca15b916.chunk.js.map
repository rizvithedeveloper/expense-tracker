{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","ProviderComponent","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","Math","abs","style","color","IncomeExpenses","amounts","income","expense","className","Transaction","sign","onClick","TransactionList","React","Children","toArray","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseInt","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca15b916.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n","const AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial State\nconst initialState = {\n  transactions: [\n    { id: 1, text: \"Flower\", amount: -20 },\n    { id: 2, text: \"Salary\", amount: 300 },\n    { id: 3, text: \"Book\", amount: -10 },\n    { id: 4, text: \"Camera\", amount: 150 },\n  ],\n};\n\n// CreateContext\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const ProviderComponent = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1 id=\"balance\">{total < 0 ? `-$${Math.abs(total)}` : `$${total}`}</h1>\n      {total < 0 && (\n        <p style={{ color: \"red\" }}>\n          Hey! Your Expenses is greater than your income\n        </p>\n      )}\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\">\n          +${income}\n        </p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p id=\"money-minus\" className=\"money minus\">\n          -${expense}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n  return (\n    <div>\n      <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n        {transaction.text}{\" \"}\n        <span>\n          {sign}${Math.abs(transaction.amount)}\n        </span>\n        <button\n          className=\"delete-btn\"\n          onClick={() => deleteTransaction(transaction.id)}\n        >\n          x\n        </button>\n      </li>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {React.Children.toArray(\n          transactions.map((transaction) => (\n            <Transaction transaction={transaction} />\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const { addTransaction } = useContext(GlobalContext);\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 1000000000),\n      text,\n      amount: parseInt(amount),\n    };\n\n    addTransaction(newTransaction);\n    setText(\"\");\n    setAmount(0);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form id=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            id=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"\"></label>\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n","import { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { ProviderComponent } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ProviderComponent>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </ProviderComponent>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}